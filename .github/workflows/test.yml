name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '23.x'
  POSTGRES_VERSION: '17'
  REDIS_VERSION: '7'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: etrax_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci
          cd ../frontend && npm ci

      - name: Setup database
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/etrax_test
        run: |
          cd backend
          npx prisma migrate deploy
          npx prisma generate

      - name: Run backend linting
        run: |
          cd backend
          npm run lint

      - name: Run backend type checking
        run: |
          cd backend
          npm run typecheck

      - name: Run backend tests
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/etrax_test
          JWT_SECRET: test-jwt-secret-key-for-testing-only-min-32-chars
          REDIS_URL: redis://localhost:6379/1
        run: |
          cd backend
          npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./backend/coverage/coverage-final.json
          flags: backend
          name: backend-coverage
          fail_ci_if_error: true

      - name: Run frontend linting
        run: |
          cd frontend
          npm run lint

      - name: Run frontend type checking
        run: |
          cd frontend
          npm run typecheck

      - name: Run frontend tests
        run: |
          cd frontend
          npm run test:coverage

      - name: Upload frontend coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./frontend/coverage/coverage-final.json
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: true

      - name: Build backend
        run: |
          cd backend
          npm run build

      - name: Build frontend
        run: |
          cd frontend
          npm run build

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci

      - name: Run security audit
        run: |
          cd backend
          npm audit --audit-level=high

      - name: Run dependency vulnerability check
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install and run Snyk
        run: |
          npm install -g snyk
          cd backend
          snyk test --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true