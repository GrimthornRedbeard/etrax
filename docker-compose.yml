version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17.2-alpine
    container_name: etrax-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: etrax_dev
      POSTGRES_USER: etrax_user
      POSTGRES_PASSWORD: development_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U etrax_user -d etrax_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7.4.1-alpine
    container_name: etrax-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: etrax-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://etrax_user:development_password@postgres:5432/etrax_dev?schema=public
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-jwt-secret-key
      FRONTEND_URL: http://localhost:5173
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./shared:/app/shared
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: etrax-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:3000/api
      VITE_WS_URL: ws://localhost:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./shared:/app/shared
    command: npm run dev -- --host 0.0.0.0
    depends_on:
      - backend

  # Nginx (Production-like proxy for development)
  nginx:
    image: nginx:1.25-alpine
    container_name: etrax-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    profiles:
      - production

  # Adminer (Database Management UI)
  adminer:
    image: adminer:4.8.1
    container_name: etrax-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    profiles:
      - tools

  # Redis Commander (Redis Management UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: etrax-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - redis
    profiles:
      - tools

  # Mailhog (Email testing in development)
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: etrax-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025" # SMTP port
      - "8025:8025" # Web UI
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    driver: bridge